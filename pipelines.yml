resources: 
  - name: app
    type: GitRepo
    configuration: 
        gitProvider: Test
        path: pulak-kanti/Basic-CRUD-Flask-REST-api
        branches: 
            include: master
        buildOn:
          commit: true
          pullRequestCreate: true


pipelines:
    - name: pipeline_hello_world
      configuration:
        environmentVariables:
          readOnly:
            MY_MESSAGE: '"Hello World!"'
      steps:
        - name: step_1
          type: Bash
          configuration:
            inputResources:
              - name: app
          execution:
            onStart:
              - update_commit_status app --status processing               
            onExecute:
              - update_commit_status app --status processing              
              - echo "Hello World!"
              - printenv
              - git clone https://github.com/pulak-kanti/Basic-CRUD-Flask-REST-api.git
              - cd Basic-CRUD-Flask-REST-api
              - echo "$res_app_shaData.headCommitRef"
              - git checkout $res_app_shaData.headCommitRef
              - pip install -r requirements.txt
              - python -m pytest
            onFailure:
              - update_commit_status app --status failure               
            onSuccess:
              - update_commit_status app --status success            
        - name: step_2
          type: Bash
          configuration:
            inputSteps:
              - name: step_1
          execution:
            onExecute:
              - echo "Step_2 Done"
        - name: step_3
          type: Bash
          configuration:
            inputSteps:
              - name: step_2
          execution:
            onExecute:
              - echo "Step_3 Done"
            
              